{"version":3,"file":"angular-indeterminate.js","sources":["webpack:///webpack/bootstrap c37d6ae3ea50522f385d","webpack:///./src/angular-indeterminate.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap c37d6ae3ea50522f385d","'use strict';\n\nmodule.exports = angular.module('ngIndeterminate', []).directive('indeterminate', [\"$parse\", function ($parse) {\n    'ngInject';\n\n    return {\n        restrict: 'AE',\n        link: function link(scope, elem, attrs) {\n            var indeterminateClickBehavior = attrs.indeterminateClickBehavior || 'select';\n            var propKey = attrs.indeterminateKey || 'enabled';\n            var disabledKey = attrs.indeterminateDisabled || 'adminDisabled';\n            var trueValue = true;\n            var falseValue = false;\n            if (attrs.ngTrueValue && attrs.ngFalseValue) {\n                trueValue = $parse(attrs.ngTrueValue)(scope);\n                falseValue = $parse(attrs.ngFalseValue)(scope);\n            } else if (attrs.ngTrueValue || attrs.ngFalseValue) {\n                throw new Error('Must have both ngTrueValue and ngFalseValue set');\n            }\n\n            // Watch for changes to the list that comprises the indeterminate checkbox\n            scope.$watch(function () {\n                var values = scope.$eval(attrs.indeterminate);\n                return values.filter(function (v) {\n                    return !v[disabledKey];\n                }).filter(function (v) {\n                    return v[propKey] === trueValue;\n                }).length + values.length;\n            }, function () {\n                var values = scope.$eval(attrs.indeterminate).filter(function (v) {\n                    return !v[disabledKey];\n                });\n                var enabled = values.filter(function (v) {\n                    return v[propKey] === trueValue;\n                });\n                elem[0].indeterminate = 0 < enabled.length && enabled.length < values.length;\n                if (enabled.length === values.length) {\n                    elem[0].checked = true;\n                } else {\n                    elem[0].checked = false;\n                }\n            });\n\n            // Update the list when the indeterminate is clicked\n            elem.on('click', function (e) {\n                scope.$apply(function () {\n                    var values = scope.$eval(attrs.indeterminate).filter(function (v) {\n                        return !v[disabledKey];\n                    });\n                    var enabled = values.filter(function (v) {\n                        return v[propKey] === trueValue;\n                    });\n                    var setValue = void 0;\n                    if (enabled.length == 0) {\n                        setValue = trueValue;\n                    } else if (enabled.length < values.length && indeterminateClickBehavior !== 'clear') {\n                        setValue = trueValue;\n                    } else {\n                        setValue = falseValue;\n                    }\n                    for (var i = 0; i < values.length; i++) {\n                        if (!values[i][disabledKey]) values[i][propKey] = setValue;\n                    }\n                });\n            });\n        }\n    };\n}]).name;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/angular-indeterminate.js\n// module id = 0\n// module chunks = 0 1"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;","sourceRoot":""}